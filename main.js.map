{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/classes/user.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/navigation/navigation.component.css","webpack:///./src/app/navigation/navigation.component.html","webpack:///./src/app/navigation/navigation.component.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/user/user-form/user-form.component.css","webpack:///./src/app/user/user-form/user-form.component.html","webpack:///./src/app/user/user-form/user-form.component.ts","webpack:///./src/app/user/user-list/user-list.component.css","webpack:///./src/app/user/user-list/user-list.component.html","webpack:///./src/app/user/user-list/user-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from '../home/home.component';\nimport { UserListComponent } from '../user/user-list/user-list.component';\n\nconst routes: Routes = [\n    { path: '', component: HomeComponent },\n    { path: 'users', component: UserListComponent },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n  ],\n  exports: [ RouterModule ],\n})\nexport class AppRoutingModule { }","module.exports = \"\"","module.exports = \"<app-navigation></app-navigation>\\n<router-outlet></router-outlet>\\n<hr class=\\\"mt-5\\\"/>\\n<footer class=\\\"mt-4 mb-4 text-muted text-center\\\">Created by <a href=\\\"https://perials.com\\\" target=\\\"__blank\\\">Perials</a></footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-crud';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { UserListComponent } from './user/user-list/user-list.component';\nimport { UserFormComponent } from './user/user-form/user-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    HomeComponent,\n    UserListComponent,\n    UserFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class User {\n  id: number;\n  name: string;\n  email: string;\n  phone: string;  \n}\n\nexport class UserFactory {\n  static getInstance() {\n    return <User>{\n      id: 0,\n      name: '',\n      email: '',\n      phone: '',  \n    }\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"jumbotron mt-5\\\">\\n    <h1 class=\\\"display-4\\\">Angular 6 + Bootstrap 4</h1>\\n    <p class=\\\"lead\\\">This is a bare minimum skeleton app for starting your next Angular application.</p>\\n    <hr />\\n    <p>It covers most of the key features of Angular that you use in a typical Angular App. So instead of searching for say <em class=\\\"text-muted\\\">\\\"how to pass data from Parent to Child component\\\"</em> you can simply refer to the <code>user-list</code> and <code>user-form</code> component.</p>\\n    <p>Most of the things that you implement in any CRUD application are covered. Click the button below to see it in action.</p>\\n    <a class=\\\"btn btn-success btn-lg\\\" routerLink=\\\"/users\\\">Checkout Now</a>\\n  </div>\\n  \\n  <h2>Installation</h2>\\n  <p>Just clone the repository and run npm install.</p>\\n  <pre><div class=\\\"card\\\"><div class=\\\"card-body\\\">git clone https://github.com/perials/angular-quickstart-skeleton-app.git\\ncd angular-quickstart-skeleton-app\\nnpm install\\nng serve</div></div></pre>\\n  \\n  <h2>Features covered</h2>\\n  <p>Below key features of Angular are covered in this application</p>\\n  <ul>\\n    <li>Routing</li>\\n    <li>Components and Services</li>\\n    <li>Template driven forms</li>\\n    <li>Parent Child component</li>\\n    <li>Passing data from Parent to Child using <code>@Input</code></li>\\n    <li>Passing data from Child to Parent using <code>@Output</code> and Event Emitters</li>\\n    <li>Consuming REST APIs using <code>http</code></li>\\n    <li>Handling <code>http</code> errors</li>\\n    <li>Integrating Bootstrap 4 in Angular</li>\\n  </ul>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"\\\">Quickstart App</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"\\\">Home</a></li>\\n      <li class=\\\"nav-item\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/users\\\">Users</a></li>\\n    </ul>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { User } from '../classes/user';\nimport { ApiResponse } from '../classes/api-response';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  \n  private userApiUrl = 'https://jsonplaceholder.typicode.com/users';\n\n  constructor(private http: HttpClient) { }\n  \n  getAll(): Observable<User[]> {\n    return this.http.get<ApiResponse>(this.userApiUrl)\n      .pipe(\n        map(apiData => {\n          // return apiData.data;\n          return apiData.map(d => <User>d);\n        }),\n        catchError(this.handleError)\n      );\n  }\n  \n  add(user: User) {\n    return this.http.post(this.userApiUrl, user, httpOptions)\n      .pipe(\n        map(apiData => {\n          // return apiData.data;\n          return apiData;\n        }),\n        catchError(this.handleError)\n      );\n  }\n  \n  edit(user: User) {\n    return this.http.put(this.userApiUrl + '/' + user.id, user, httpOptions)\n      .pipe(\n        map(apiData => {\n          // return apiData.data;\n          return apiData;\n        }),\n        catchError(this.handleError)\n      );\n  }\n  \n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n     \\n    <span *ngIf=\\\"user.id == 0\\\"><i class=\\\"fa fa-user-plus mr-2\\\"></i>Add</span>\\n    <span *ngIf=\\\"user.id > 0\\\"><i class=\\\"fa fa-user-edit mr-2\\\"></i>Edit</span>\\n    User (Template Driven)\\n  </div>\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">{{ error }}</div>\\n    <div *ngIf=\\\"showSuccessMsg\\\" class=\\\"alert alert-success\\\">User saved successfully</div>\\n    \\n    <form #userform=\\\"ngForm\\\" autocomplete=\\\"off\\\">      \\n      <div class=\\\"form-group\\\">\\n        <input\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"Name\\\"\\n          [(ngModel)]=\\\"user.name\\\"\\n          name=\\\"name\\\"\\n          required\\n          #name=\\\"ngModel\\\" />\\n        <div\\n          class=\\\"alert alert-danger\\\"\\n          [hidden]=\\\"name.valid || name.pristine\\\" >\\n          Name is required\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <input\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"Email\\\"\\n          [(ngModel)]=\\\"user.email\\\"\\n          name=\\\"email\\\"\\n          required #email=\\\"ngModel\\\" />\\n        <div\\n          class=\\\"alert alert-danger\\\"\\n          [hidden]=\\\"email.valid || email.pristine\\\" >\\n          Email is required\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"form-group\\\">\\n        <input\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\"\\n          placeholder=\\\"Phone\\\"\\n          [(ngModel)]=\\\"user.phone\\\"\\n          name=\\\"phone\\\"\\n          required #phone=\\\"ngModel\\\" />\\n        <div\\n          class=\\\"alert alert-danger\\\"\\n          [hidden]=\\\"phone.valid || phone.pristine\\\" >\\n          Phone is required\\n        </div>\\n      </div>\\n      \\n      <div class=\\\"text-center\\\">\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n          <button\\n            [disabled]=\\\"!userform.form.valid\\\"\\n            class=\\\"btn btn-success\\\"\\n            (click)=\\\"save(userform)\\\">\\n            <i class=\\\"fa fa-save\\\"></i> Save <i *ngIf=\\\"loading\\\" class=\\\"fa fa-circle-notch fa-spin\\\"></i>\\n          </button>\\n          \\n          <button\\n            [disabled]=\\\"(user.id == 0) && (userform.form.pristine || loading)\\\"\\n            class=\\\"btn btn-light border\\\"\\n            (click)=\\\"resetForm(userform)\\\">\\n            <i class=\\\"fa fa-ban\\\"></i> Cancel\\n          </button>\\n        </div>\\n      </div>      \\n      \\n      <div class=\\\"mt-4 mb-1\\\"><strong>Below is the <code>user</code> model data of this component</strong></div>\\n      <code style=\\\"display: block; white-space: pre-wrap;\\\">{{getUser()}}</code>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { User, UserFactory } from '../../classes/user';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent implements OnInit {\n  @Input() user:User;\n  @Output() updateUserList = new EventEmitter<Boolean>();\n  names = \"abc\";\n  error = undefined;\n  loading = false;\n  showSuccessMsg = false;\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n  }\n  \n  getUser() {\n    return JSON.stringify(this.user, null, 2);\n  }\n  \n  addUser(user, userform) {\n    this.userService.add(user)\n      .subscribe(\n        response => {\n          this.resetForm(userform);\n          this.afterSuccess();\n        },\n        error => {\n          this.error = error;    \n        }\n      )\n  }\n  \n  editUser(user, userform) {\n    this.userService.edit(user)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.afterSuccess();\n        },\n        error => {\n          this.error = error;\n        }\n      )\n  }\n  \n  flashSuccessMessage() {\n    this.showSuccessMsg = true;\n    setTimeout(() => this.showSuccessMsg = false, 3000)\n  }\n  \n  afterSuccess() {\n    this.flashSuccessMessage();\n    this.updateUserList.emit(true);\n    this.loading = false;\n  }\n  \n  resetForm(userform) {\n    userform.reset();\n    this.user = UserFactory.getInstance();\n  }\n  \n  save(userform) {\n    this.error = undefined;\n    this.loading = true;\n    if (this.user.id === 0) {\n      this.addUser(this.user, userform);\n    }\n    else {\n      this.editUser(this.user, userform);\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n  <!--<h2>User list</h2>\\n  <p>Below data is fetched from an API.</p>-->\\n  \\n  <div class=\\\"alert alert-warning\\\">We are using <a href=\\\"https://jsonplaceholder.typicode.com/\\\" target=\\\"__blank\\\">https://jsonplaceholder.typicode.com/</a> for our REST API. Data that you add/edit below is not actually saved !! However the API sends response as if it actually was.</div>\\n  \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <app-user-form [user]=\\\"userToEdit\\\" (updateUserList)=\\\"getUsers($event)\\\"></app-user-form>\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table\\\">\\n          <tr>\\n            <th>Id</th>\\n            <th>Name</th>\\n            <th>Email</th>\\n            <th>Phone</th>\\n            <th>Actions</th>\\n          </tr>\\n          <tr *ngIf=\\\"loading\\\">\\n            <td colspan=\\\"6\\\">\\n              <div class=\\\"alert alert-warning\\\"><i class=\\\"fa fa-circle-notch fa-spin\\\"></i> Loading...</div>\\n            </td>\\n          </tr>\\n          <tr *ngFor=\\\"let user of users\\\">\\n            <td>{{ user.id }}</td>\\n            <td>{{ user.name }}</td>\\n            <td>{{ user.email }}</td>\\n            <td>{{ user.phone }}</td>\\n            <td>\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"editUser(user)\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\"><i class=\\\"fa fa-trash-alt\\\"></i></button>\\n              </div>\\n            </td>\\n          </tr>\\n        </table>\\n      </div>\\n      <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\">{{ error }}</div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { User, UserFactory } from '../../classes/user';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  users: User[] = [];\n  userToEdit = UserFactory.getInstance();\n  error = undefined;\n  loading = false;\n  \n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.getUsers();\n  }\n  \n  getUsers() {\n    this.loading = true;\n    this.userService.getAll()\n    .subscribe(\n      users => {\n        this.users = users;\n        this.loading = false;\n      },\n      error => {\n        this.error = error;\n      }\n    );\n  }\n  \n  editUser(user) {\n    this.userToEdit = {...user};\n    console.log(this.userToEdit);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}